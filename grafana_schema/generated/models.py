# generated by datamodel-codegen:
#   filename:  schema.json
#   timestamp: 2025-04-20T13:34:53+00:00

from __future__ import annotations
from collections.abc import Sequence
from dataclasses import dataclass
from typing import Any, Literal


@dataclass
class AnnotationPanelFilter:
    exclude: bool | None = None
    """
    Should the specified panels be included or excluded
    """
    ids: Sequence[float] | None = None
    """
    Panel IDs that should be included or excluded
    """


BarGaugeDisplayMode = Literal["basic", "gradient", "lcd"]


BarGaugeNamePlacement = Literal["auto", "hidden", "left", "top"]


BarGaugeSizing = Literal["auto", "manual"]


BarGaugeValueMode = Literal["color", "hidden", "text"]


BigValueColorMode = Literal["background", "background_solid", "none", "value"]


BigValueGraphMode = Literal["area", "line", "none"]


BigValueJustifyMode = Literal["auto", "center"]


BigValueTextMode = Literal["auto", "name", "none", "value", "value_and_name"]


@dataclass
class Snapshot:
    """
    Snapshot options. They are present only if the dashboard is a snapshot.
    """

    created: str | None = None
    """
    Time when the snapshot was created
    """
    expires: str | None = None
    """
    Time when the snapshot expires, default is never to expire
    """
    external: bool | None = None
    """
    Is the snapshot saved in an external grafana instance
    """
    externalUrl: str | None = None
    """
    external url, if snapshot was shared in external grafana instance
    """
    id: float | None = None
    """
    Unique identifier of the snapshot
    """
    key: str | None = None
    """
    Optional, defined the unique key of the snapshot, required if external is true
    """
    name: str | None = None
    """
    Optional, name of the snapshot
    """
    orgId: float | None = None
    """
    org id of the snapshot
    """
    originalUrl: str | None = None
    """
    original url, url of the dashboard that was snapshotted
    """
    updated: str | None = None
    """
    last time when the snapshot was updated
    """
    url: str | None = None
    """
    url of the snapshot, if snapshot was shared internally
    """
    userId: float | None = None
    """
    user id of the snapshot creator
    """


@dataclass
class Time:
    """
    Time range for dashboard.
    Accepted values are relative time strings like {from: 'now-6h', to: 'now'} or absolute time strings like {from: '2020-07-10T08:00:00.000Z', to: '2020-07-10T14:00:00.000Z'}.
    """

    from_: str | None = None
    to: str | None = None


DashboardLinkType = Literal["dashboards", "link"]


@dataclass
class DataSourceRef:
    """
    Ref to a DataSource instance
    """

    type: str | None = None
    """
    The plugin type-id
    """
    uid: str | None = None
    """
    Specific datasource instance
    """


@dataclass
class DataSourceRef1:
    apiVersion: str | None = None
    """
    Datasource API version
    """
    type: str | None = None
    """
    The plugin type-id
    """
    uid: str | None = None
    """
    Specific datasource instance
    """


FieldColorModeId = Literal[
    "continuous-BlPu",
    "continuous-BlYlRd",
    "continuous-blues",
    "continuous-GrYlRd",
    "continuous-greens",
    "continuous-purples",
    "continuous-RdYlGr",
    "continuous-reds",
    "continuous-YlBl",
    "continuous-YlRd",
    "fixed",
    "palette-classic",
    "palette-classic-by-name",
    "shades",
    "thresholds",
]


@dataclass
class Property:
    id: str | None = None
    value: Any | None = None


FieldTextAlignment = Literal["auto", "center", "left", "right"]


GraphThresholdsStyleMode = Literal[
    "area", "dashed", "dashed+area", "line", "line+area", "off", "series"
]


@dataclass
class GridPos:
    """
    Position and dimensions of a panel in the grid
    """

    h: float | None = None
    """
    Panel height. The height is the number of rows from the top edge of the panel.
    """
    static: bool | None = None
    """
    Whether the panel is fixed within the grid. If true, the panel will not be affected by other panels' interactions
    """
    w: float | None = None
    """
    Panel width. The width is the number of columns from the left edge of the panel.
    """
    x: float | None = None
    """
    Panel x. The x coordinate is the number of columns from the left edge of the grid
    """
    y: float | None = None
    """
    Panel y. The y coordinate is the number of rows from the top edge of the grid
    """


@dataclass
class HideSeriesConfig:
    """
    TODO docs
    """

    legend: bool | None = None
    tooltip: bool | None = None
    viz: bool | None = None


LegendDisplayMode = Literal["hidden", "list", "table"]


LegendPlacement = Literal["bottom", "right"]


@dataclass
class LibraryPanelRef:
    """
    A library panel is a reusable panel that you can use in any dashboard.
    When you make a change to a library panel, that change propagates to all instances of where the panel is used.
    Library panels streamline reuse of panels across multiple dashboards.
    """

    name: str | None = None
    """
    Library panel name
    """
    uid: str | None = None
    """
    Library panel uid
    """


@dataclass
class LineStyle:
    """
    TODO docs
    """

    dash: Sequence[float] | None = None
    fill: Literal["dash", "dot", "solid", "square"] | None = None


@dataclass
class MatcherConfig1:
    """
    Matcher is a predicate configuration. Based on the config a set of field(s) or values is filtered in order to apply override / transformation.
    It comes with in id ( to resolve implementation from registry) and a configuration thatâ€™s specific to a particular matcher type.
    """

    id: str | None = None
    """
    The matcher id. This is used to find the matcher implementation from registry.
    """
    options: Any | None = None
    """
    The matcher options. This is specific to the matcher implementation.
    """


PercentChangeColorMode = Literal["inverted", "same_as_value", "standard"]


PieChartLabels = Literal["name", "percent", "value"]


PieChartLegendValues = Literal["percent", "value"]


@dataclass
class PieChartPanelFieldConfig:
    hideFrom: HideSeriesConfig | None = None
    """
    TODO docs
    """


PieChartType = Literal["donut", "pie"]


@dataclass
class RecordStringValueMappingResult:
    pass


@dataclass
class RecordStringUnknown(RecordStringValueMappingResult):
    pass


@dataclass
class ReduceDataOptions:
    """
    TODO docs
    """

    calcs: Sequence[str] | None = None
    """
    When !values, pick one value for the whole field
    """
    fields: str | None = None
    """
    Which fields to show.  By default this is only numeric fields
    """
    limit: float | None = None
    """
    if showing all values limit
    """
    values: bool | None = None
    """
    If true show each row value
    """


ScaleDistribution = Literal["linear", "log", "ordinal", "symlog"]


@dataclass
class ScaleDistributionConfig:
    """
    TODO docs
    """

    linearThreshold: float | None = None
    log: float | None = None
    type: ScaleDistribution | None = None


SortOrder = Literal["asc", "desc", "none"]


SpecialValueMatch = Literal["empty", "false", "nan", "null", "null+nan", "true"]


@dataclass
class StackingConfig:
    """
    TODO docs
    """

    group: str | None = None
    mode: Literal["none", "normal", "percent"] | None = None
    """
    TODO docs
    """


StackingMode = Literal["none", "normal", "percent"]


@dataclass
class TableActionsCellOptions:
    """
    Show actions in the cell
    """

    type: str = "actions"


@dataclass
class TableAutoCellOptions:
    """
    Auto mode table cell options
    """

    type: str = "auto"
    wrapText: bool | None = None


@dataclass
class TableBarGaugeCellOptions:
    """
    Gauge cell options
    """

    mode: Literal["basic", "gradient", "lcd"] | None = None
    """
    Enum expressing the possible display modes
    for the bar gauge component of Grafana UI
    """
    type: str = "gauge"
    valueDisplayMode: Literal["color", "hidden", "text"] | None = None
    """
    Allows for the table cell gauge display type to set the gauge mode.
    """


@dataclass
class TableColorTextCellOptions:
    """
    Colored text cell options
    """

    type: str = "color-text"
    wrapText: bool | None = None


@dataclass
class TableColoredBackgroundCellOptions:
    """
    Colored background cell options
    """

    applyToRow: bool | None = None
    mode: Literal["basic", "gradient"] | None = None
    """
    Display mode to the "Colored Background" display
    mode for table cells. Either displays a solid color (basic mode)
    or a gradient.
    """
    type: str = "color-background"
    wrapText: bool | None = None


@dataclass
class TableDataLinksCellOptions:
    """
    Show data links in the cell
    """

    type: str = "data-links"


@dataclass
class TableFooterOptions:
    """
    Footer options
    """

    countRows: bool | None = None
    enablePagination: bool | None = None
    fields: Sequence[str] | None = None
    reducer: Sequence[str] | None = None
    show: bool | None = None


@dataclass
class TableImageCellOptions:
    """
    Json view cell options
    """

    alt: str | None = None
    title: str | None = None
    type: str = "image"


@dataclass
class TableJsonViewCellOptions:
    """
    Json view cell options
    """

    type: str = "json-view"


@dataclass
class TableSortByFieldState:
    """
    Sort by field state
    """

    desc: bool | None = None
    """
    Flag used to indicate descending sort order
    """
    displayName: str | None = None
    """
    Sets the display name of the field to sort by
    """


@dataclass
class Threshold:
    """
    User-defined value for a metric that triggers visual changes in a panel when this value is met or exceeded
    They are used to conditionally style and color visualizations based on query results , and can be applied to most visualizations.
    """

    color: str | None = None
    """
    Color represents the color of the visual change that will occur in the dashboard when the threshold value is met or exceeded.
    """
    value: float | None = None
    """
    Value represents a specified metric for the threshold, which triggers a visual change in the dashboard when this value is met or exceeded.
    Nulls currently appear here when serializing -Infinity to JSON.
    """


ThresholdsMode = Literal["absolute", "percentage"]


@dataclass
class TimeOption1:
    """
    Counterpart for TypeScript's TimeOption type.
    """

    display: str | None = None
    from_: str | None = None
    to: str | None = None


@dataclass
class TimePickerConfig1:
    """
    Time picker configuration
    It defines the default config for the time picker and the refresh picker for the specific dashboard.
    """

    hidden: bool | None = None
    """
    Whether timepicker is visible or not.
    """
    nowDelay: str | None = None
    """
    Override the now time by entering a time delay. Use this option to accommodate known delays in data aggregation to avoid null values.
    """
    quick_ranges: Sequence[TimeOption1] | None = None
    """
    Quick ranges for time picker.
    """
    refresh_intervals: Sequence[str] | None = None
    """
    Interval options available in the refresh picker dropdown.
    """


TooltipDisplayMode = Literal["multi", "none", "single"]


@dataclass
class ValueMap:
    """
    Maps text values to a color or different display text and color.
    For example, you can configure a value mapping so that all instances of the value 10 appear as Perfection! rather than the number.
    """

    options: RecordStringValueMappingResult | None = None
    """
    Map with <value_to_match>: ValueMappingResult. For example: { "10": { text: "Perfection!", color: "green" } }
    """
    type: str = "value"


@dataclass
class ValueMappingResult:
    """
    Result used as replacement with text and color when the value matches
    """

    color: str | None = None
    """
    Text to use when the value matches
    """
    icon: str | None = None
    """
    Icon to display when the value matches. Only specific visualizations.
    """
    index: float | None = None
    """
    Position in the mapping array. Only used internally.
    """
    text: str | None = None
    """
    Text to display when the value matches
    """


@dataclass
class VariableOption:
    """
    Option to be selected in a variable.
    """

    selected: bool | None = None
    """
    Whether the option is selected or not
    """
    text: Sequence[str] | str | None = None
    """
    Text to be displayed for the option
    """
    value: Sequence[str] | str | None = None
    """
    Value of the option
    """


VariableType = Literal[
    "adhoc",
    "constant",
    "custom",
    "datasource",
    "groupby",
    "interval",
    "query",
    "snapshot",
    "system",
    "textbox",
]


VisibilityMode = Literal["always", "auto", "never"]


@dataclass
class VizLegendOptions:
    """
    TODO docs
    """

    asTable: bool | None = None
    calcs: Sequence[str] | None = None
    displayMode: LegendDisplayMode | None = None
    isVisible: bool | None = None
    placement: LegendPlacement | None = None
    showLegend: bool | None = None
    sortBy: str | None = None
    sortDesc: bool | None = None
    width: float | None = None


VizOrientation = Literal["auto", "horizontal", "vertical"]


@dataclass
class VizTextDisplayOptions:
    """
    TODO docs
    """

    percentSize: float | None = None
    """
    Explicit percent text size
    """
    titleSize: float | None = None
    """
    Explicit title text size
    """
    valueSize: float | None = None
    """
    Explicit value text size
    """


@dataclass
class VizTooltipOptions:
    """
    TODO docs
    """

    hideZeros: bool | None = None
    maxHeight: float | None = None
    maxWidth: float | None = None
    mode: TooltipDisplayMode | None = None
    sort: SortOrder | None = None


@dataclass
class BarChartOptions:
    barRadius: float | None = None
    """
    Controls the radius of each bar.
    """
    barWidth: float | None = None
    """
    Controls the width of bars. 1 = Max width, 0 = Min width.
    """
    colorByField: str | None = None
    """
    Use the color value for a sibling field to color each bar value.
    """
    fullHighlight: bool | None = None
    """
    Enables mode which highlights the entire bar area and shows tooltip when cursor
    hovers over highlighted area
    """
    groupWidth: float | None = None
    """
    Controls the width of groups. 1 = max with, 0 = min width.
    """
    legend: VizLegendOptions | None = None
    orientation: VizOrientation | None = None
    """
    Controls the orientation of the bar chart, either vertical or horizontal.
    """
    showValue: VisibilityMode | None = None
    """
    This controls whether values are shown on top or to the left of bars.
    """
    stacking: StackingMode | None = None
    """
    Controls whether bars are stacked or not, either normally or in percent mode.
    """
    text: VizTextDisplayOptions | None = None
    """
    TODO docs
    """
    tooltip: VizTooltipOptions | None = None
    xField: str | None = None
    """
    Manually select which field from the dataset to represent the x field.
    """
    xTickLabelMaxLength: float | None = None
    """
    Sets the max length that a label can have before it is truncated.
    """
    xTickLabelRotation: float | None = None
    """
    Controls the rotation of the x axis labels.
    """
    xTickLabelSpacing: float | None = None
    """
    Controls the spacing between x axis labels.
    negative values indicate backwards skipping behavior
    """


@dataclass
class BarGaugeOptions:
    displayMode: BarGaugeDisplayMode | None = None
    legend: VizLegendOptions | None = None
    maxVizHeight: float | None = None
    minVizHeight: float | None = None
    minVizWidth: float | None = None
    namePlacement: BarGaugeNamePlacement | None = None
    orientation: VizOrientation | None = None
    reduceOptions: ReduceDataOptions | None = None
    showUnfilled: bool | None = None
    sizing: BarGaugeSizing | None = None
    text: VizTextDisplayOptions | None = None
    """
    TODO docs
    """
    valueMode: BarGaugeValueMode | None = None


@dataclass
class DashboardLink:
    """
    Links with references to other dashboards or external resources
    """

    asDropdown: bool | None = None
    """
    If true, all dashboards links will be displayed in a dropdown. If false, all dashboards links will be displayed side by side. Only valid if the type is dashboards
    """
    icon: str | None = None
    """
    Icon name to be displayed with the link
    """
    includeVars: bool | None = None
    """
    If true, includes current template variables values in the link as query params
    """
    keepTime: bool | None = None
    """
    If true, includes current time range in the link as query params
    """
    tags: Sequence[str] | None = None
    """
    List of tags to limit the linked dashboards. If empty, all dashboards will be displayed. Only valid if the type is dashboards
    """
    targetBlank: bool | None = None
    """
    If true, the link will be opened in a new tab
    """
    title: str | None = None
    """
    Title to display with the link
    """
    tooltip: str | None = None
    """
    Tooltip to display when the user hovers their mouse over it
    """
    type: DashboardLinkType | None = None
    """
    Link type. Accepted values are dashboards (to refer to another dashboard) and link (to refer to an external resource)
    """
    url: str | None = None
    """
    Link URL. Only required/valid if the type is link
    """


@dataclass
class DataQuery:
    datasource: DataSourceRef1 | None = None
    """
    For mixed data sources the selected datasource is on the query level.
    For non mixed scenarios this is undefined.
    TODO find a better way to do this ^ that's friendly to schema
    TODO this shouldn't be unknown but DataSourceRef | null
    """
    hide: bool | None = None
    """
    If hide is set to true, Grafana will filter out the response(s) associated with this query before returning it to the panel.
    """
    key: str | None = None
    """
    Unique, guid like, string (used only in explore mode)
    """
    queryType: str | None = None
    """
    Specify the query flavor
    TODO make this required and give it a default
    """
    refId: str | None = None
    """
    A unique identifier for the query within the list of targets.
    In server side expressions, the refId is used as a variable name to identify results.
    By default, the UI will assign A->Z; however setting meaningful names may be useful.
    """


@dataclass
class DataTransformerConfig1:
    """
    Transformations allow to manipulate data returned by a query before the system applies a visualization.
    Using transformations you can: rename fields, join time series data, perform mathematical operations across queries,
    use the output of one transformation as the input to another transformation, etc.
    """

    disabled: bool | None = None
    """
    Disabled transformations are skipped
    """
    filter: MatcherConfig1 | None = None
    """
    Optional frame matcher. When missing it will be applied to all results
    """
    id: str | None = None
    """
    Unique identifier of transformer
    """
    options: Any | None = None
    """
    Options to be passed to the transformer
    Valid options depend on the transformer id
    """
    topic: Literal["alertStates", "annotations", "series"] | None = None
    """
    Where to pull DataFrames from as input to transformation
    """


@dataclass
class FieldColor:
    """
    Map a field to a color.
    """

    fixedColor: str | None = None
    """
    The fixed color value for fixed or shades color modes.
    """
    mode: FieldColorModeId | None = None
    """
    The main color scheme mode.
    """
    seriesBy: Literal["last", "max", "min"] | None = None
    """
    Some visualizations need to know how to assign a series color from by value color schemes.
    """


@dataclass
class Custom1(PieChartPanelFieldConfig, RecordStringUnknown):
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """


@dataclass
class Override:
    matcher: MatcherConfig1 | None = None
    properties: Sequence[Property] | None = None


@dataclass
class Override1(Override):
    pass


@dataclass
class Override2(Override):
    pass


@dataclass
class Override3(Override):
    pass


@dataclass
class Override4(Override):
    pass


@dataclass
class GaugeOptions:
    minVizHeight: float | None = None
    minVizWidth: float | None = None
    orientation: VizOrientation | None = None
    reduceOptions: ReduceDataOptions | None = None
    showThresholdLabels: bool | None = None
    showThresholdMarkers: bool | None = None
    sizing: BarGaugeSizing | None = None
    text: VizTextDisplayOptions | None = None
    """
    TODO docs
    """


@dataclass
class GraphThresholdsStyleConfig:
    """
    TODO docs
    """

    mode: GraphThresholdsStyleMode | None = None


@dataclass
class PieChartLegendOptions:
    asTable: bool | None = None
    calcs: Sequence[str] | None = None
    displayMode: LegendDisplayMode | None = None
    isVisible: bool | None = None
    placement: LegendPlacement | None = None
    showLegend: bool | None = None
    sortBy: str | None = None
    sortDesc: bool | None = None
    values: Sequence[PieChartLegendValues] | None = None
    width: float | None = None


@dataclass
class PieChartOptions:
    displayLabels: Sequence[PieChartLabels] | None = None
    legend: PieChartLegendOptions | None = None
    orientation: VizOrientation | None = None
    pieType: PieChartType | None = None
    reduceOptions: ReduceDataOptions | None = None
    text: VizTextDisplayOptions | None = None
    """
    TODO docs
    """
    tooltip: VizTooltipOptions | None = None


@dataclass
class Options:
    """
    Range to match against and the result to apply when the value is within the range
    """

    from_: float | None = None
    """
    Min value of the range. It can be null which means -Infinity
    """
    result: ValueMappingResult | None = None
    """
    Config to apply when the value is within the range
    """
    to: float | None = None
    """
    Max value of the range. It can be null which means +Infinity
    """


@dataclass
class RangeMap:
    """
    Maps numerical ranges to a display text and color.
    For example, if a value is within a certain range, you can configure a range value mapping to display Low or High rather than the number.
    """

    options: Options | None = None
    """
    Range to match against and the result to apply when the value is within the range
    """
    type: str = "range"


@dataclass
class Options1:
    """
    Regular expression to match against and the result to apply when the value matches the regex
    """

    pattern: str | None = None
    """
    Regular expression to match against
    """
    result: ValueMappingResult | None = None
    """
    Config to apply when the value matches the regex
    """


@dataclass
class RegexMap:
    """
    Maps regular expressions to replacement text and a color.
    For example, if a value is www.example.com, you can configure a regex value mapping so that Grafana displays www and truncates the domain.
    """

    options: Options1 | None = None
    """
    Regular expression to match against and the result to apply when the value matches the regex
    """
    type: str = "regex"


@dataclass
class Options2:
    match: SpecialValueMatch | None = None
    """
    Special value to match against
    """
    result: ValueMappingResult | None = None
    """
    Config to apply when the value matches the special value
    """


@dataclass
class SpecialValueMap:
    """
    Maps special values like Null, NaN (not a number), and boolean values like true and false to a display text and color.
    See SpecialValueMatch to see the list of special values.
    For example, you can configure a special value mapping so that null values appear as N/A.
    """

    options: Options2 | None = None
    type: str = "special"


@dataclass
class StatOptions:
    colorMode: BigValueColorMode | None = None
    graphMode: BigValueGraphMode | None = None
    justifyMode: BigValueJustifyMode | None = None
    orientation: VizOrientation | None = None
    percentChangeColorMode: PercentChangeColorMode | None = None
    reduceOptions: ReduceDataOptions | None = None
    showPercentChange: bool | None = None
    text: VizTextDisplayOptions | None = None
    """
    TODO docs
    """
    textMode: BigValueTextMode | None = None
    wideLayout: bool | None = None


@dataclass
class TableOptions:
    cellHeight: Literal["auto", "lg", "md", "sm"] | None = None
    """
    Controls the height of the rows
    """
    footer: TableFooterOptions | None = None
    """
    Controls footer options
    """
    frameIndex: float | None = None
    """
    Represents the index of the selected frame
    """
    showHeader: bool | None = None
    """
    Controls whether the panel should show the header
    """
    showTypeIcons: bool | None = None
    """
    Controls whether the header should show icons for the column types
    """
    sortBy: Sequence[TableSortByFieldState] | None = None
    """
    Used to control row sorting
    """


@dataclass
class TableSparklineCellOptions:
    """
    Sparkline cell options
    """

    axisBorderShow: bool | None = None
    axisCenteredZero: bool | None = None
    axisColorMode: Literal["series", "text"] | None = None
    """
    TODO docs
    """
    axisGridShow: bool | None = None
    axisLabel: str | None = None
    axisPlacement: (
        Literal["auto", "bottom", "hidden", "left", "right", "top"] | None
    ) = None
    """
    TODO docs
    """
    axisSoftMax: float | None = None
    axisSoftMin: float | None = None
    axisWidth: float | None = None
    barAlignment: Literal[-1, 0, 1] | None = None
    """
    TODO docs
    """
    barMaxWidth: float | None = None
    barWidthFactor: float | None = None
    drawStyle: Literal["bars", "line", "points"] | None = None
    """
    TODO docs
    """
    fillBelowTo: str | None = None
    fillColor: str | None = None
    fillOpacity: float | None = None
    gradientMode: Literal["hue", "none", "opacity", "scheme"] | None = None
    """
    TODO docs
    """
    hideFrom: HideSeriesConfig | None = None
    """
    TODO docs
    """
    hideValue: bool | None = None
    insertNulls: float | bool | None = None
    lineColor: str | None = None
    lineInterpolation: Literal["linear", "smooth", "stepAfter", "stepBefore"] | None = (
        None
    )
    """
    TODO docs
    """
    lineStyle: LineStyle | None = None
    """
    TODO docs
    """
    lineWidth: float | None = None
    pointColor: str | None = None
    pointSize: float | None = None
    pointSymbol: str | None = None
    scaleDistribution: ScaleDistributionConfig | None = None
    """
    TODO docs
    """
    showPoints: Literal["always", "auto", "never"] | None = None
    """
    TODO docs
    """
    spanNulls: float | bool | None = None
    """
    Indicate if null values should be treated as gaps or connected.
    When the value is a number, it represents the maximum delta in the
    X axis that should be considered connected.  For timeseries, this is milliseconds
    """
    stacking: StackingConfig | None = None
    """
    TODO docs
    """
    thresholdsStyle: GraphThresholdsStyleConfig | None = None
    """
    TODO docs
    """
    transform: Literal["constant", "negative-Y"] | None = None
    """
    TODO docs
    """
    type: str = "sparkline"


@dataclass
class ThresholdsConfig:
    """
    Thresholds configuration for the panel
    """

    mode: ThresholdsMode | None = None
    """
    Thresholds mode.
    """
    steps: Sequence[Threshold] | None = None
    """
    Must be sorted by 'value', first value is always -Infinity
    """


@dataclass
class TimeSeriesOptions:
    legend: VizLegendOptions | None = None
    orientation: Literal["auto", "horizontal", "vertical"] | None = None
    """
    TODO docs
    """
    timezone: Sequence[str] | None = None
    tooltip: VizTooltipOptions | None = None


@dataclass
class TimeSeriesPanelFieldConfig:
    axisBorderShow: bool | None = None
    axisCenteredZero: bool | None = None
    axisColorMode: Literal["series", "text"] | None = None
    """
    TODO docs
    """
    axisGridShow: bool | None = None
    axisLabel: str | None = None
    axisPlacement: (
        Literal["auto", "bottom", "hidden", "left", "right", "top"] | None
    ) = None
    """
    TODO docs
    """
    axisSoftMax: float | None = None
    axisSoftMin: float | None = None
    axisWidth: float | None = None
    barAlignment: Literal[-1, 0, 1] | None = None
    """
    TODO docs
    """
    barMaxWidth: float | None = None
    barWidthFactor: float | None = None
    drawStyle: Literal["bars", "line", "points"] | None = None
    """
    TODO docs
    """
    fillBelowTo: str | None = None
    fillColor: str | None = None
    fillOpacity: float | None = None
    gradientMode: Literal["hue", "none", "opacity", "scheme"] | None = None
    """
    TODO docs
    """
    hideFrom: HideSeriesConfig | None = None
    """
    TODO docs
    """
    insertNulls: float | bool | None = None
    lineColor: str | None = None
    lineInterpolation: Literal["linear", "smooth", "stepAfter", "stepBefore"] | None = (
        None
    )
    """
    TODO docs
    """
    lineStyle: LineStyle | None = None
    """
    TODO docs
    """
    lineWidth: float | None = None
    pointColor: str | None = None
    pointSize: float | None = None
    pointSymbol: str | None = None
    scaleDistribution: ScaleDistributionConfig | None = None
    """
    TODO docs
    """
    showPoints: Literal["always", "auto", "never"] | None = None
    """
    TODO docs
    """
    spanNulls: float | bool | None = None
    """
    Indicate if null values should be treated as gaps or connected.
    When the value is a number, it represents the maximum delta in the
    X axis that should be considered connected.  For timeseries, this is milliseconds
    """
    stacking: StackingConfig | None = None
    """
    TODO docs
    """
    thresholdsStyle: GraphThresholdsStyleConfig | None = None
    """
    TODO docs
    """
    transform: Literal["constant", "negative-Y"] | None = None
    """
    TODO docs
    """


ValueMapping = ValueMap | RangeMap | RegexMap | SpecialValueMap


@dataclass
class VariableModel:
    allValue: str | None = None
    """
    Custom all value
    """
    allowCustomValue: bool | None = None
    """
    Allow custom values to be entered in the variable
    """
    current: VariableOption | None = None
    """
    Shows current selected variable text/value on the dashboard
    """
    datasource: DataSourceRef1 | None = None
    description: str | None = None
    """
    Description of variable. It can be defined but `null`.
    """
    hide: Literal[0, 1, 2] | None = None
    """
    Visibility configuration for the variable
    """
    includeAll: bool | None = None
    """
    Whether all value option is available or not
    """
    label: str | None = None
    """
    Optional display name
    """
    multi: bool | None = None
    """
    Whether multiple values can be selected or not from variable value list
    """
    name: str | None = None
    """
    Name of variable
    """
    options: Sequence[VariableOption] | None = None
    """
    Options that can be selected for a variable.
    """
    query: RecordStringUnknown | str | None = None
    """
    Query used to fetch values for a variable
    """
    refresh: Literal[0, 1, 2] | None = None
    """
    Options to config when to refresh a variable
    """
    regex: str | None = None
    """
    Optional field, if you want to extract part of a series name or metric node segment.
    Named capture groups can be used to separate the display text and value.
    """
    skipUrlSync: bool | None = None
    """
    Whether the variable value should be managed by URL query params or not
    """
    sort: Literal[0, 1, 2, 3, 4, 5, 6, 7, 8] | None = None
    """
    Options sort order
    """
    type: VariableType | None = None
    """
    Type of variable
    """


@dataclass
class AnnotationQueryDataQuery:
    builtIn: float | None = None
    """
    Set to 1 for the standard annotation query all dashboards have by default.
    """
    datasource: DataSourceRef1 | None = None
    enable: bool | None = None
    """
    When enabled the annotation query is issued with every dashboard refresh
    """
    filter: AnnotationPanelFilter | None = None
    """
    Filters to apply when fetching annotations
    """
    hide: bool | None = None
    """
    Annotation queries can be toggled on or off at the top of the dashboard.
    When hide is true, the toggle is not shown in the dashboard.
    """
    iconColor: str | None = None
    """
    Color to use for the annotation event markers
    """
    name: str | None = None
    """
    Name of annotation.
    """
    snapshotData: Any | None = None
    target: DataQuery | None = None
    type: str | None = None
    """
    TODO -- this should not exist here, it is based on the --grafana-- datasource
    """


@dataclass
class BarChartPanelFieldConfig:
    axisBorderShow: bool | None = None
    axisCenteredZero: bool | None = None
    axisColorMode: Literal["series", "text"] | None = None
    """
    TODO docs
    """
    axisGridShow: bool | None = None
    axisLabel: str | None = None
    axisPlacement: (
        Literal["auto", "bottom", "hidden", "left", "right", "top"] | None
    ) = None
    """
    TODO docs
    """
    axisSoftMax: float | None = None
    axisSoftMin: float | None = None
    axisWidth: float | None = None
    fillOpacity: float | None = None
    """
    Controls the fill opacity of the bars.
    """
    gradientMode: Literal["hue", "none", "opacity", "scheme"] | None = None
    """
    Set the mode of the gradient fill. Fill gradient is based on the line color. To change the color, use the standard color scheme field option.
    Gradient appearance is influenced by the Fill opacity setting.
    """
    hideFrom: HideSeriesConfig | None = None
    """
    TODO docs
    """
    lineWidth: float | None = None
    """
    Controls line width of the bars.
    """
    scaleDistribution: ScaleDistributionConfig | None = None
    """
    TODO docs
    """
    thresholdsStyle: GraphThresholdsStyleConfig | None = None
    """
    Threshold rendering
    """


@dataclass
class Templating:
    list: Sequence[VariableModel] | None = None


@dataclass
class Custom(BarChartPanelFieldConfig, RecordStringUnknown):
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """


@dataclass
class FieldConfigBarChartPanelFieldConfig:
    color: FieldColor | None = None
    """
    Panel color configuration
    """
    custom: Custom | None = None
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """
    decimals: float | None = None
    """
    Specify the number of decimals Grafana includes in the rendered value.
    If you leave this field blank, Grafana automatically truncates the number of decimals based on the value.
    For example 1.1234 will display as 1.12 and 100.456 will display as 100.
    To display all decimals, set the unit to `String`.
    """
    description: str | None = None
    """
    Human readable field metadata
    """
    displayName: str | None = None
    """
    The display value for this field.  This supports template variables blank is auto
    """
    displayNameFromDS: str | None = None
    """
    This can be used by data sources that return and explicit naming structure for values and labels
    When this property is configured, this value is used rather than the default naming strategy.
    """
    filterable: bool | None = None
    """
    True if data source field supports ad-hoc filters
    """
    links: Sequence | None = None
    """
    The behavior when clicking on a result
    """
    mappings: Sequence[ValueMapping] | None = None
    """
    Convert input values into a display string
    """
    max: float | None = None
    """
    The maximum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    min: float | None = None
    """
    The minimum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    noValue: str | None = None
    """
    Alternative to empty string
    """
    path: str | None = None
    """
    An explicit path to the field in the datasource.  When the frame meta includes a path,
    This will default to `${frame.meta.path}/${field.name}

    When defined, this value can be used as an identifier within the datasource scope, and
    may be used to update the results
    """
    thresholds: ThresholdsConfig | None = None
    """
    Map numeric values to states
    """
    unit: str | None = None
    """
    Unit a field should use. The unit you select is applied to all fields except time.
    You can use the units ID availables in Grafana or a custom unit.
    Available units in Grafana: https://github.com/grafana/grafana/blob/main/packages/grafana-data/src/valueFormats/categories.ts
    As custom unit, you can use the following formats:
    `suffix:<suffix>` for custom unit that should go after value.
    `prefix:<prefix>` for custom unit that should go before value.
    `time:<format>` For custom date time formats type for example `time:YYYY-MM-DD`.
    `si:<base scale><unit characters>` for custom SI units. For example: `si: mF`. This one is a bit more advanced as you can specify both a unit and the source data scale. So if your source data is represented as milli (thousands of) something prefix the unit with that SI scale character.
    `count:<unit>` for a custom count unit.
    `currency:<unit>` for custom a currency unit.
    """
    writeable: bool | None = None
    """
    True if data source can write a value to the path. Auth/authz are supported separately
    """


@dataclass
class FieldConfigPieChartPanelFieldConfig:
    color: FieldColor | None = None
    """
    Panel color configuration
    """
    custom: Custom1 | None = None
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """
    decimals: float | None = None
    """
    Specify the number of decimals Grafana includes in the rendered value.
    If you leave this field blank, Grafana automatically truncates the number of decimals based on the value.
    For example 1.1234 will display as 1.12 and 100.456 will display as 100.
    To display all decimals, set the unit to `String`.
    """
    description: str | None = None
    """
    Human readable field metadata
    """
    displayName: str | None = None
    """
    The display value for this field.  This supports template variables blank is auto
    """
    displayNameFromDS: str | None = None
    """
    This can be used by data sources that return and explicit naming structure for values and labels
    When this property is configured, this value is used rather than the default naming strategy.
    """
    filterable: bool | None = None
    """
    True if data source field supports ad-hoc filters
    """
    links: Sequence | None = None
    """
    The behavior when clicking on a result
    """
    mappings: Sequence[ValueMapping] | None = None
    """
    Convert input values into a display string
    """
    max: float | None = None
    """
    The maximum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    min: float | None = None
    """
    The minimum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    noValue: str | None = None
    """
    Alternative to empty string
    """
    path: str | None = None
    """
    An explicit path to the field in the datasource.  When the frame meta includes a path,
    This will default to `${frame.meta.path}/${field.name}

    When defined, this value can be used as an identifier within the datasource scope, and
    may be used to update the results
    """
    thresholds: ThresholdsConfig | None = None
    """
    Map numeric values to states
    """
    unit: str | None = None
    """
    Unit a field should use. The unit you select is applied to all fields except time.
    You can use the units ID availables in Grafana or a custom unit.
    Available units in Grafana: https://github.com/grafana/grafana/blob/main/packages/grafana-data/src/valueFormats/categories.ts
    As custom unit, you can use the following formats:
    `suffix:<suffix>` for custom unit that should go after value.
    `prefix:<prefix>` for custom unit that should go before value.
    `time:<format>` For custom date time formats type for example `time:YYYY-MM-DD`.
    `si:<base scale><unit characters>` for custom SI units. For example: `si: mF`. This one is a bit more advanced as you can specify both a unit and the source data scale. So if your source data is represented as milli (thousands of) something prefix the unit with that SI scale character.
    `count:<unit>` for a custom count unit.
    `currency:<unit>` for custom a currency unit.
    """
    writeable: bool | None = None
    """
    True if data source can write a value to the path. Auth/authz are supported separately
    """


@dataclass
class FieldConfigRecordStringUnknown:
    color: FieldColor | None = None
    """
    Panel color configuration
    """
    custom: RecordStringUnknown | None = None
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """
    decimals: float | None = None
    """
    Specify the number of decimals Grafana includes in the rendered value.
    If you leave this field blank, Grafana automatically truncates the number of decimals based on the value.
    For example 1.1234 will display as 1.12 and 100.456 will display as 100.
    To display all decimals, set the unit to `String`.
    """
    description: str | None = None
    """
    Human readable field metadata
    """
    displayName: str | None = None
    """
    The display value for this field.  This supports template variables blank is auto
    """
    displayNameFromDS: str | None = None
    """
    This can be used by data sources that return and explicit naming structure for values and labels
    When this property is configured, this value is used rather than the default naming strategy.
    """
    filterable: bool | None = None
    """
    True if data source field supports ad-hoc filters
    """
    links: Sequence | None = None
    """
    The behavior when clicking on a result
    """
    mappings: Sequence[ValueMapping] | None = None
    """
    Convert input values into a display string
    """
    max: float | None = None
    """
    The maximum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    min: float | None = None
    """
    The minimum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    noValue: str | None = None
    """
    Alternative to empty string
    """
    path: str | None = None
    """
    An explicit path to the field in the datasource.  When the frame meta includes a path,
    This will default to `${frame.meta.path}/${field.name}

    When defined, this value can be used as an identifier within the datasource scope, and
    may be used to update the results
    """
    thresholds: ThresholdsConfig | None = None
    """
    Map numeric values to states
    """
    unit: str | None = None
    """
    Unit a field should use. The unit you select is applied to all fields except time.
    You can use the units ID availables in Grafana or a custom unit.
    Available units in Grafana: https://github.com/grafana/grafana/blob/main/packages/grafana-data/src/valueFormats/categories.ts
    As custom unit, you can use the following formats:
    `suffix:<suffix>` for custom unit that should go after value.
    `prefix:<prefix>` for custom unit that should go before value.
    `time:<format>` For custom date time formats type for example `time:YYYY-MM-DD`.
    `si:<base scale><unit characters>` for custom SI units. For example: `si: mF`. This one is a bit more advanced as you can specify both a unit and the source data scale. So if your source data is represented as milli (thousands of) something prefix the unit with that SI scale character.
    `count:<unit>` for a custom count unit.
    `currency:<unit>` for custom a currency unit.
    """
    writeable: bool | None = None
    """
    True if data source can write a value to the path. Auth/authz are supported separately
    """


@dataclass
class Custom3(TimeSeriesPanelFieldConfig, RecordStringUnknown):
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """


@dataclass
class FieldConfigTimeSeriesPanelFieldConfig:
    color: FieldColor | None = None
    """
    Panel color configuration
    """
    custom: Custom3 | None = None
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """
    decimals: float | None = None
    """
    Specify the number of decimals Grafana includes in the rendered value.
    If you leave this field blank, Grafana automatically truncates the number of decimals based on the value.
    For example 1.1234 will display as 1.12 and 100.456 will display as 100.
    To display all decimals, set the unit to `String`.
    """
    description: str | None = None
    """
    Human readable field metadata
    """
    displayName: str | None = None
    """
    The display value for this field.  This supports template variables blank is auto
    """
    displayNameFromDS: str | None = None
    """
    This can be used by data sources that return and explicit naming structure for values and labels
    When this property is configured, this value is used rather than the default naming strategy.
    """
    filterable: bool | None = None
    """
    True if data source field supports ad-hoc filters
    """
    links: Sequence | None = None
    """
    The behavior when clicking on a result
    """
    mappings: Sequence[ValueMapping] | None = None
    """
    Convert input values into a display string
    """
    max: float | None = None
    """
    The maximum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    min: float | None = None
    """
    The minimum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    noValue: str | None = None
    """
    Alternative to empty string
    """
    path: str | None = None
    """
    An explicit path to the field in the datasource.  When the frame meta includes a path,
    This will default to `${frame.meta.path}/${field.name}

    When defined, this value can be used as an identifier within the datasource scope, and
    may be used to update the results
    """
    thresholds: ThresholdsConfig | None = None
    """
    Map numeric values to states
    """
    unit: str | None = None
    """
    Unit a field should use. The unit you select is applied to all fields except time.
    You can use the units ID availables in Grafana or a custom unit.
    Available units in Grafana: https://github.com/grafana/grafana/blob/main/packages/grafana-data/src/valueFormats/categories.ts
    As custom unit, you can use the following formats:
    `suffix:<suffix>` for custom unit that should go after value.
    `prefix:<prefix>` for custom unit that should go before value.
    `time:<format>` For custom date time formats type for example `time:YYYY-MM-DD`.
    `si:<base scale><unit characters>` for custom SI units. For example: `si: mF`. This one is a bit more advanced as you can specify both a unit and the source data scale. So if your source data is represented as milli (thousands of) something prefix the unit with that SI scale character.
    `count:<unit>` for a custom count unit.
    `currency:<unit>` for custom a currency unit.
    """
    writeable: bool | None = None
    """
    True if data source can write a value to the path. Auth/authz are supported separately
    """


@dataclass
class FieldConfigSourceBarChartPanelFieldConfig:
    defaults: FieldConfigBarChartPanelFieldConfig | None = None
    overrides: Sequence[Override] | None = None
    """
    Overrides are the options applied to specific fields overriding the defaults.
    """


@dataclass
class FieldConfigSourcePieChartPanelFieldConfig:
    defaults: FieldConfigPieChartPanelFieldConfig | None = None
    overrides: Sequence[Override1] | None = None
    """
    Overrides are the options applied to specific fields overriding the defaults.
    """


@dataclass
class FieldConfigSourceRecordStringUnknown:
    defaults: FieldConfigRecordStringUnknown | None = None
    overrides: Sequence[Override2] | None = None
    """
    Overrides are the options applied to specific fields overriding the defaults.
    """


@dataclass
class FieldConfigSourceTimeSeriesPanelFieldConfig:
    defaults: FieldConfigTimeSeriesPanelFieldConfig | None = None
    overrides: Sequence[Override4] | None = None
    """
    Overrides are the options applied to specific fields overriding the defaults.
    """


@dataclass
class Gauge:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourceRecordStringUnknown | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: GaugeOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


@dataclass
class PieChart:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourcePieChartPanelFieldConfig | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: PieChartOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


@dataclass
class Stat:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourceRecordStringUnknown | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: StatOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


TableCellOptions = (
    TableAutoCellOptions
    | TableColorTextCellOptions
    | TableJsonViewCellOptions
    | TableImageCellOptions
    | TableDataLinksCellOptions
    | TableActionsCellOptions
    | TableBarGaugeCellOptions
    | TableSparklineCellOptions
    | TableColoredBackgroundCellOptions
)


@dataclass
class TablePanelFieldConfig:
    align: FieldTextAlignment | None = None
    cellOptions: TableCellOptions | None = None
    displayMode: (
        Literal[
            "actions",
            "auto",
            "basic",
            "color-background",
            "color-background-solid",
            "color-text",
            "custom",
            "data-links",
            "gauge",
            "gradient-gauge",
            "image",
            "json-view",
            "lcd-gauge",
            "sparkline",
        ]
        | None
    ) = None
    """
    This field is deprecated in favor of using cellOptions
    """
    filterable: bool | None = None
    hidden: bool | None = None
    hideHeader: bool | None = None
    """
    Hides any header for a column, useful for columns that show some static content or buttons.
    """
    inspect: bool | None = None
    minWidth: float | None = None
    width: float | None = None


@dataclass
class TimeSeries:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourceTimeSeriesPanelFieldConfig | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: TimeSeriesOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


@dataclass
class AnnotationContainer:
    list: Sequence[AnnotationQueryDataQuery] | None = None


@dataclass
class BarChart:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourceBarChartPanelFieldConfig | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: BarChartOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


@dataclass
class BarGauge:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourceRecordStringUnknown | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: BarGaugeOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


@dataclass
class Custom2(TablePanelFieldConfig, RecordStringUnknown):
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """


@dataclass
class FieldConfigTablePanelFieldConfig:
    color: FieldColor | None = None
    """
    Panel color configuration
    """
    custom: Custom2 | None = None
    """
    custom is specified by the FieldConfig field
    in panel plugin schemas.
    """
    decimals: float | None = None
    """
    Specify the number of decimals Grafana includes in the rendered value.
    If you leave this field blank, Grafana automatically truncates the number of decimals based on the value.
    For example 1.1234 will display as 1.12 and 100.456 will display as 100.
    To display all decimals, set the unit to `String`.
    """
    description: str | None = None
    """
    Human readable field metadata
    """
    displayName: str | None = None
    """
    The display value for this field.  This supports template variables blank is auto
    """
    displayNameFromDS: str | None = None
    """
    This can be used by data sources that return and explicit naming structure for values and labels
    When this property is configured, this value is used rather than the default naming strategy.
    """
    filterable: bool | None = None
    """
    True if data source field supports ad-hoc filters
    """
    links: Sequence | None = None
    """
    The behavior when clicking on a result
    """
    mappings: Sequence[ValueMapping] | None = None
    """
    Convert input values into a display string
    """
    max: float | None = None
    """
    The maximum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    min: float | None = None
    """
    The minimum value used in percentage threshold calculations. Leave blank for auto calculation based on all series and fields.
    """
    noValue: str | None = None
    """
    Alternative to empty string
    """
    path: str | None = None
    """
    An explicit path to the field in the datasource.  When the frame meta includes a path,
    This will default to `${frame.meta.path}/${field.name}

    When defined, this value can be used as an identifier within the datasource scope, and
    may be used to update the results
    """
    thresholds: ThresholdsConfig | None = None
    """
    Map numeric values to states
    """
    unit: str | None = None
    """
    Unit a field should use. The unit you select is applied to all fields except time.
    You can use the units ID availables in Grafana or a custom unit.
    Available units in Grafana: https://github.com/grafana/grafana/blob/main/packages/grafana-data/src/valueFormats/categories.ts
    As custom unit, you can use the following formats:
    `suffix:<suffix>` for custom unit that should go after value.
    `prefix:<prefix>` for custom unit that should go before value.
    `time:<format>` For custom date time formats type for example `time:YYYY-MM-DD`.
    `si:<base scale><unit characters>` for custom SI units. For example: `si: mF`. This one is a bit more advanced as you can specify both a unit and the source data scale. So if your source data is represented as milli (thousands of) something prefix the unit with that SI scale character.
    `count:<unit>` for a custom count unit.
    `currency:<unit>` for custom a currency unit.
    """
    writeable: bool | None = None
    """
    True if data source can write a value to the path. Auth/authz are supported separately
    """


@dataclass
class FieldConfigSourceTablePanelFieldConfig:
    defaults: FieldConfigTablePanelFieldConfig | None = None
    overrides: Sequence[Override3] | None = None
    """
    Overrides are the options applied to specific fields overriding the defaults.
    """


@dataclass
class Table:
    cacheTimeout: str | None = None
    """
    Sets panel queries cache timeout.
    """
    datasource: DataSourceRef | None = None
    """
    The datasource used in all targets.
    """
    description: str | None = None
    """
    Panel description.
    """
    fieldConfig: FieldConfigSourceTablePanelFieldConfig | None = None
    gridPos: GridPos | None = None
    """
    Grid position.
    """
    hideTimeOverride: bool | None = None
    """
    Controls if the timeFrom or timeShift overrides are shown in the panel header
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    interval: str | None = None
    """
    The min time interval setting defines a lower limit for the $__interval and $__interval_ms variables.
    This value must be formatted as a number followed by a valid time
    identifier like: "40s", "3d", etc.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    libraryPanel: LibraryPanelRef | None = None
    """
    Dynamically load the panel
    """
    links: Sequence[DashboardLink] | None = None
    """
    Panel links.
    """
    maxDataPoints: float | None = None
    """
    The maximum number of data points that the panel queries are retrieving.
    """
    maxPerRow: float | None = None
    """
    Option for repeated panels that controls max items per row
    Only relevant for horizontally repeated panels
    """
    options: TableOptions | None = None
    pluginVersion: str | None = None
    """
    The version of the plugin that is used for this panel. This is used to find the plugin to display the panel and to migrate old panel configs.
    """
    queryCachingTTL: float | None = None
    """
    Overrides the data source configured time-to-live for a query cache item in milliseconds
    """
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    repeatDirection: Literal["h", "v"] | None = None
    """
    Direction to repeat in if 'repeat' is set.
    `h` for horizontal, `v` for vertical.
    """
    targets: Sequence[RecordStringUnknown] | None = None
    """
    Depends on the panel plugin. See the plugin documentation for details.
    """
    timeFrom: str | None = None
    """
    Overrides the relative time range for individual panels,
    which causes them to be different than what is selected in
    the dashboard time picker in the top-right corner of the dashboard. You can use this to show metrics from different
    time periods or days on the same dashboard.
    The value is formatted as time operation like: `now-5m` (Last 5 minutes), `now/d` (the day so far),
    `now-5d/d`(Last 5 days), `now/w` (This week so far), `now-2y/y` (Last 2 years).
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    timeShift: str | None = None
    """
    Overrides the time range for individual panels by shifting its start and end relative to the time picker.
    For example, you can shift the time range for the panel to be two hours earlier than the dashboard time picker setting `2h`.
    Note: Panel time overrides have no effect when the dashboardâ€™s time range is absolute.
    See: https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/#query-options
    """
    title: str | None = None
    """
    Panel title.
    """
    transformations: Sequence[DataTransformerConfig1] | None = None
    """
    List of transformations that are applied to the panel data before rendering.
    When there are multiple transformations, Grafana applies them in the order they are listed.
    Each transformation creates a result set that then passes on to the next transformation in the processing pipeline.
    """
    transparent: bool | None = None
    """
    Whether to display the panel without a background.
    """
    type: str | None = None
    """
    The panel plugin type id. This is used to find the plugin to display the panel.
    """


PluginPanel = BarGauge | BarChart | Gauge | PieChart | Stat | Table | TimeSeries


@dataclass
class RowPanel:
    collapsed: bool | None = None
    """
    Whether this row should be collapsed or not.
    """
    datasource: DataSourceRef | None = None
    """
    Name of default datasource for the row
    """
    gridPos: GridPos | None = None
    """
    Row grid position
    """
    id: float | None = None
    """
    Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    """
    panels: Sequence[PluginPanel] | None = None
    repeat: str | None = None
    """
    Name of template variable to repeat for.
    """
    title: str | None = None
    """
    Row title
    """
    type: str = "row"
    """
    The panel type
    """


@dataclass
class Dashboard:
    annotations: AnnotationContainer | None = None
    description: str | None = None
    """
    Description of dashboard.
    """
    editable: bool | None = None
    """
    Whether a dashboard is editable or not.
    """
    fiscalYearStartMonth: float | None = None
    """
    The month that the fiscal year starts on.  0 = January, 11 = December
    """
    gnetId: str | None = None
    """
    ID of a dashboard imported from the https://grafana.com/grafana/dashboards/ portal
    """
    graphTooltip: Literal[0, 1, 2] | None = None
    """
    Configuration of dashboard cursor sync behavior.
    Accepted values are 0 (sync turned off), 1 (shared crosshair), 2 (shared crosshair and tooltip).
    """
    id: float | None = None
    """
    Unique numeric identifier for the dashboard.
    `id` is internal to a specific Grafana instance. `uid` should be used to identify a dashboard across Grafana instances.
    """
    links: Sequence[DashboardLink] | None = None
    """
    Links with references to other dashboards or external websites.
    """
    liveNow: bool | None = None
    """
    When set to true, the dashboard will redraw panels at an interval matching the pixel width.
    This will keep data "moving left" regardless of the query refresh rate. This setting helps
    avoid dashboards presenting stale live data
    """
    panels: (
        Sequence[
            BarGauge
            | BarChart
            | Gauge
            | PieChart
            | Stat
            | Table
            | TimeSeries
            | RowPanel
        ]
        | None
    ) = None
    preload: bool | None = None
    """
    When set to true, the dashboard will load all panels in the dashboard when it's loaded.
    """
    refresh: str | None = None
    """
    Refresh rate of dashboard. Represented via interval string, e.g. "5s", "1m", "1h", "1d".
    """
    revision: float | None = None
    """
    This property should only be used in dashboards defined by plugins.  It is a quick check
    to see if the version has changed since the last time.
    """
    schemaVersion: float | None = None
    """
    Version of the JSON schema, incremented each time a Grafana update brings
    changes to said schema.
    """
    snapshot: Snapshot | None = None
    """
    Snapshot options. They are present only if the dashboard is a snapshot.
    """
    tags: Sequence[str] | None = None
    """
    Tags associated with dashboard.
    """
    templating: Templating | None = None
    time: Time | None = None
    """
    Time range for dashboard.
    Accepted values are relative time strings like {from: 'now-6h', to: 'now'} or absolute time strings like {from: '2020-07-10T08:00:00.000Z', to: '2020-07-10T14:00:00.000Z'}.
    """
    timepicker: TimePickerConfig1 | None = None
    """
    Configuration of the time picker shown at the top of a dashboard.
    """
    timezone: str | None = None
    """
    Timezone of dashboard. Accepted values are IANA TZDB zone ID or "browser" or "utc".
    """
    title: str | None = None
    """
    Title of dashboard.
    """
    uid: str | None = None
    """
    Unique dashboard identifier that can be generated by anyone. string (8-40)
    """
    version: float | None = None
    """
    Version of the dashboard, incremented each time the dashboard is updated.
    """
    weekStart: str | None = None
    """
    Day when the week starts. Expressed by the name of the day in lowercase, e.g. "monday".
    """


Model = Dashboard
